df[1]
View(df)
data=json$loads(codecs$decode(codecs$encode(r$text),'utf-8-sig'))
df0=pd$json_normalize(data['result'])
df = pd$DataFrame(df0$result)
df=t(df)
View(df)
df[1]
df[1]['date']
df[[1]]
df[[1]]$date
Date=df[[seq(1,length(df)]]$date
Value=df[seq(2,length(df),by=6)]
Min=df[seq(3,length(df),by=6)]
Max=df[seq(4,length(df),by=6)]
Variation=df[seq(5,length(df),by=6)]
Volume=df[seq(5,length(df),by=6)]
df=data.frame(Date,Value,Min,Max,Variation,Volume)
rownames(df)=df$Date
df=df[,-1]
return(df)
}
link=paste('https://www.leboursier.ma/api?method=getPriceHistory&ISIN=','&format=json&from=',sep = toString(isin))
link=paste(link,'&to=',sep = toString(from))
link=paste0(link,toString(to))
r=requests$get(link)
data=json$loads(codecs$decode(codecs$encode(r$text),'utf-8-sig'))
df0=pd$json_normalize(data['result'])
df = pd$DataFrame(df0$result)
df=t(df)
for(i in 1:length(df)){
Date=df[[i]]$date
Value=df[[i]]
Min=df[[]]
Max=df[[]]
Variation=df[[i]]
Volume=df[[i]]
}
data=json$loads(codecs$decode(codecs$encode(r$text),'utf-8-sig'))
df0=pd$json_normalize(data['result'])
df = pd$DataFrame(df0$result)
df=t(df)
Date=list()
Value=list()
Min=list()
Max=list()
Variation=list()
Volume=list()
for(i in 1:length(df)){
Date=c(Date,df[[i]]$date)
Value=c(Value,df[[i]]$value)
Min=c(Min, df[[i]]$min)
Max=c(Max, df[[i]]$max)
Variation=c(Variation, df[[i]]$variation)
Volume=c(Volume, df[[i]]$volume)
}
View(Date)
df=data.frame(Date,Value,Min,Max,Variation,Volume)
View(df)
Date
data=json$loads(codecs$decode(codecs$encode(r$text),'utf-8-sig'))
df0=pd$json_normalize(data['result'])
df = pd$DataFrame(df0$result)
df=t(df)
Date=c()
Value=c()
Min=c()
Max=c()
Variation=c()
Volume=c()
for(i in 1:length(df)){
Date=c(Date,df[[i]]$date)
Value=c(Value,df[[i]]$value)
Min=c(Min, df[[i]]$min)
Max=c(Max, df[[i]]$max)
Variation=c(Variation, df[[i]]$variation)
Volume=c(Volume, df[[i]]$volume)
}
Date
df=data.frame(Date,Value,Min,Max,Variation,Volume)
View(df)
View(df0)
data=json$loads(codecs$decode(codecs$encode(r$text),'utf-8-sig'))
df0=pd$json_normalize(data['result'])
df = pd$DataFrame(df0$result)
df=t(df)
Date=c()
Value=c()
Min=c()
Max=c()
Variation=c()
Volume=c()
View(df)
View(df[[1]][[0]])
reticulate::py_dict(df0$result)
View(df0)
View(df0[[1]][[1]])
data=json$loads(codecs$decode(codecs$encode(r$text),'utf-8-sig'))
df0=pd$json_normalize(data['result'])
data$result
View(data$result)
link=paste('https://www.leboursier.ma/api?method=getPriceHistory&ISIN=','&format=json&from=',sep = toString(isin))
link=paste(link,'&to=',sep = toString(from))
link=paste0(link,toString(to))
r=requests$get(link)
View(r)
data=json$loads(codecs$decode(codecs$encode(r$text),'UTF-8-SIG'))
View(data)
data=json$loads(codecs$decode(r$text,'UTF-8-SIG'))
codecs$encoder(r$text)
codecs$encode(r$text)
ccodecs$encode(r$text)
c=codecs$encode(r$text)
c$decode('UTF-8-SIG')
link=paste('https://www.leboursier.ma/api?method=getPriceHistory&ISIN=','&format=json&from=',sep = toString(isin))
link=paste(link,'&to=',sep = toString(from))
link=paste0(link,toString(to))
r=requests$get(link)
c=codecs$encode(r$text)
c=c$decode('UTF-8-SIG')
data=json$loads(c)
View(data)
df0=pd$json_normalize(data)
df = pd$DataFrame(df0$result)
df=t(df)
Date=c()
Value=c()
Min=c()
Max=c()
Variation=c()
Volume=c()
for(i in 1:length(df)){
Date=c(Date,df[[i]]$date)
Value=c(Value,df[[i]]$value)
Min=c(Min, df[[i]]$min)
Max=c(Max, df[[i]]$max)
Variation=c(Variation, df[[i]]$variation)
Volume=c(Volume, df[[i]]$volume)
}
df=data.frame(Date,Value,Min,Max,Variation,Volume)
df = pd$DataFrame(df0$result)
df=t(df)
Date=c()
Value=c()
Min=c()
Max=c()
Variation=c()
Volume=c()
for(i in 0:length(df)){
Date=c(Date,df[[i]]$date)
Value=c(Value,df[[i]]$value)
Min=c(Min, df[[i]]$min)
Max=c(Max, df[[i]]$max)
Variation=c(Variation, df[[i]]$variation)
Volume=c(Volume, df[[i]]$volume)
}
Date=c()
Value=c()
Min=c()
Max=c()
Variation=c()
Volume=c()
for(i in 1:length(df)){
Date=c(Date,df[[i]]$date)
Value=c(Value,df[[i]]$value)
Min=c(Min, df[[i]]$min)
Max=c(Max, df[[i]]$max)
Variation=c(Variation, df[[i]]$variation)
Volume=c(Volume, df[[i]]$volume)
}
df=pd$DataFrame(Date,Value,Min,Max,Variation,Volume)
df=pd$DataFrame(Value,Min,Max,Variation,Volume)
df=data.frame(Value,Min,Max,Variation,Volume)
View(Value)
Value
Value[i]
Value[1]
link=paste('https://www.leboursier.ma/api?method=getPriceHistory&ISIN=','&format=json&from=',sep = toString(isin))
link=paste(link,'&to=',sep = toString(from))
link=paste0(link,toString(to))
r=requests$get(link)
c=codecs$encode(r$text)
c=c$decode('UTF-8-SIG')
data=json$loads(c)
df0=pd$json_normalize(data)
df = pd$DataFrame(df0$result)
df=t(df)
Date=c(seq(1,length(df)))
Value=c(seq(1,length(df)))
Min=c(seq(1,length(df)))
Max=c(seq(1,length(df)))
Variation=c(seq(1,length(df)))
Volume=c(seq(1,length(df)))
for(i in 1:length(df)){
Date[i]=df[[i]]$date
Value[i]=df[[i]]$value
Min[i]=df[[i]]$min
Max[i]=df[[i]]$max
Variation[i]=df[[i]]$variation
Volume[i]=df[[i]]$volume
}
df[[1]]$value
View(df)
ma=matrix(df)
View(ma)
ma=data.matrix(df)
ma=data.frame(df)
ma=do.call(rbind.data.frame,df)
ma=do.call(rbind.data.frame(df))
ma=rbind.data.frame(df)
ma=rbind.data.frame([1])
ma=rbind.data.frame([[1]])
rep(null,10)
rep(NULL,10)
rep(1,10)
c=rep(1,10)
c[1]=NULL
rep(list(NULL),10)
rp=rep(list(NULL),10)
rp[1]
rp[[1]]
rp[[2]]
link=paste('https://www.leboursier.ma/api?method=getPriceHistory&ISIN=','&format=json&from=',sep = toString(isin))
#' Title
#'
#' @param ticker put ticker
#' @param from from date
#' @param to to date
#' @return data frame
#' @export
from='06-12-2016'
to='01-01-2021'
ticker='CTM'
pd=reticulate::import("pandas")
requests=reticulate::import("requests")
json=reticulate::import("json")
datetime=reticulate::import("datetime")
sys=reticulate::import('sys')
warnings=reticulate::import("warnings")
codecs=reticulate::import("codecs")
dat=reticulate::dict ('ADH' = "MA0000011512", "AFM"= "MA0000012296", "AFI"= "MA0000012114","GAZ"= "MA0000010951",
"AGM"= "MA0000010944", "ADI"= "MA0000011819", "ALM"= "MA0000010936",
"ARD"= "MA0000012460", "ATL"= "MA0000011710", "ATW"= "MA0000012445", "ATH"= "MA0000010969",
"NEJ"= "MA0000011009", "BAL"= "MA0000011991", "BOA"= "MA0000012437",
"BCP"= "MA0000011884", "BCI"= "MA0000010811", "CRS"= "MA0000011868", "CDM"= "MA0000010381",
"CDA"= "MA0000012049", "CIH"= "MA0000011454", "CMA"= "MA0000010506",
"CMT"= "MA0000011793", "COL"= "MA0000011934", "CSR"= "MA0000012247", "CTM"= "MA0000010340",
"DRI"= "MA0000011421", "DLM"= "MA0000011777", "DHO"= "MA0000011850",
"DIS"= "MA0000010639", "DWY"= "MA0000011637", "NKL"= "MA0000011942", "EQD"= "MA0000010357",
"FBR"= "MA0000011587", "HPS"= "MA0000011611", "IBC"= "MA0000011132",
"IMO"= "MA0000012387", "INV"= "MA0000011579", "JET"= "MA0000012080",
"LBV"= "MA0000011801", "LHM"= "MA0000012320", "LES"= "MA0000012031", "LYD"= "MA0000011439",
"M2M"= "MA0000011678", "MOX"= "MA0000010985", "MAB"= "MA0000011215", "MNG"= "MA0000011058",
"MLE"= "MA0000010035", "IAM"= "MA0000011488", "MDP"= "MA0000011447",
"MIC"= "MA0000012163", "MUT"= "MA0000012395", "NEX"= "MA0000011140", "OUL"= "MA0000010415",
"PRO"= "MA0000011660", "REB"= "MA0000010993", "RDS"= "MA0000012239",
"RISMA"="MA0000011462","S2M"= "MA0000012106", "SAH"= "MA0000012007", "SLF"= "MA0000011744",
"SAM"="MA0000010803", "SMI"= "MA0000010068", "SNA"= "MA0000011843",
"SNP"="MA0000011728", "MSA"= "MA0000012312", "SID"= "MA0000010019", "SOT"= "MA0000012502",
"SRM"="MA0000011595", "SBM"= "MA0000010365", "STR"= "MA0000012056",
"TQM"= "MA0000012205", "TIM"= "MA0000011686", "TMA"= "MA0000012262", "UMR"= "MA0000012023",
"WAA"= "MA0000010928", "ZDJ"= "MA0000010571")
CodeValeur =reticulate::dict("ADH" = "9000" , "AFM" = "12200" , "AFI" = "11700" , "GAZ" = "7100" , "AGM" = "6700" ,
"ADI" = "11200" , "ALM" = "6600" , "ARD" = "27" , "ATL" = "10300" , "ATW" = "8200" , "ATH" = "3200" ,
"NEJ" = "7000" , "BAL" = "3300" , "BOA" = "1100" , "BCP" = "8000" , "BCI" = "5100" , "CRS" = "8900" ,
"CDM" = "3600" , "CDA" = "3900" , "CIH" = "3100" , "CMA" = "4000" , "CMT" = "11000" , "COL" = "9200" ,
"CSR" = "4100" , "CTM" = "2200" , "DRI" = "8500" , "DLM" = "10800" , "DHO" = "10900" , "DIS" = "4200" ,
"DWY" = "9700" , "NKL" = "11300" , "EQD" = "2300" , "FBR" = "9300" , "HPS" = "9600" , "IBC" = "7600" ,
"IMO" = "12" , "INV" = "9500" , "JET" = "11600" , "LBV" = "11100" , "LHM" = "3800" , "LES" = "4800" ,
"LYD" = "8600" , "M2M" = "10000" , "MOX" = "7200" , "MAB" = "1600" , "MNG" = "7300" , "MLE" = "2500" ,
"IAM" = "8001" , "MDP" = "6500" , "MIC" = "10600" , "MUT" = "21" , "NEX" = "7400" , "OUL" = "5200" ,
"PRO" = "9900" , "REB" = "5300" , "RDS" = "12000" , "RISMA" = "8700" , "S2M" = "11800" ,
"SAH" = "11400" , "SLF" = "10700" , "SAM" = "6800" , "SMI" = "1500" , "SNA" = "10500" ,
"SNP" = "9400" , "MSA" = "12300" , "SID" = "1300" , "SOT" = "9800" , "SRM" = "2000" ,
"SBM" = "10400" , "STR" = "11500" , "TQM" = "11900" , "TIM" = "10100" , "TMA" = "12100" , "UMR" = "7500" ,
"WAA" = "6400" , "ZDJ" = "5800")
isin=dat[ticker]
link=paste('https://www.leboursier.ma/api?method=getPriceHistory&ISIN=','&format=json&from=',sep = toString(isin))
link=paste(link,'&to=',sep = toString(from))
link=paste0(link,toString(to))
r=requests$get(link)
c=codecs$encode(r$text)
c=c$decode('UTF-8-SIG')
data=json$loads(c)
df0=pd$json_normalize(data)
df = pd$DataFrame(df0$result)
df=t(df)
Date=rep(list(NULL),length(df))
Value=rep(list(NULL),length(df))
Min=rep(list(NULL),length(df))
Max=rep(list(NULL),length(df))
Variation=rep(list(NULL),length(df))
Volume=rep(list(NULL),length(df))
for(i in 1:length(df)){
Date[[i]]=df[[i]]$date
Value[[i]]=df[[i]]$value
Min[[i]]=df[[i]]$min
Max[[i]]=df[[i]]$max
Variation[[i]]=df[[i]]$variation
Volume[[i]]=df[[i]]$volume
}
View(Max)
df=data.frame(Value,Min,Max,Variation,Volume)
View(Value)
Value[1]
Value[2]
ma=matrix(Value)
View(ma)
ma[1]
Date=matrix(Date)
Value=matrix(Value)
Min=matrix(Min)
Max=matrix(Max)
Variation=matrix(Variation)
Volume=matrix(Volume)
df=data.frame(Value,Min,Max,Variation,Volume)
View(df)
link=paste('https://www.leboursier.ma/api?method=getPriceHistory&ISIN=','&format=json&from=',sep = toString(isin))
link=paste(link,'&to=',sep = toString(from))
link=paste0(link,toString(to))
r=requests$get(link)
c=codecs$encode(r$text)
c=c$decode('UTF-8-SIG')
data=json$loads(c)
df0=pd$json_normalize(data)
df = pd$DataFrame(df0$result)
df=t(df)
Date=rep(list(NULL),length(df))
Value=rep(list(NULL),length(df))
Min=rep(list(NULL),length(df))
Max=rep(list(NULL),length(df))
Variation=rep(list(NULL),length(df))
Volume=rep(list(NULL),length(df))
for(i in 1:length(df)){
Date[[i]]=df[[i]]$date
Value[[i]]=df[[i]]$value
Min[[i]]=df[[i]]$min
Max[[i]]=df[[i]]$max
Variation[[i]]=df[[i]]$variation
Volume[[i]]=df[[i]]$volume
}
Date=matrix(Date)
Value=matrix(Value)
Min=matrix(Min)
Max=matrix(Max)
Variation=matrix(Variation)
Volume=matrix(Volume)
df=data.frame(Value,Min,Max,Variation,Volume)
View(df)
link=paste('https://www.leboursier.ma/api?method=getPriceHistory&ISIN=','&format=json&from=',sep = toString(isin))
link=paste(link,'&to=',sep = toString(from))
link=paste0(link,toString(to))
r=requests$get(link)
c=codecs$encode(r$text)
c=c$decode('UTF-8-SIG')
data=json$loads(c)
df0=pd$json_normalize(data)
df = pd$DataFrame(df0$result)
df=t(df)
Date=rep(list(NULL),length(df))
Value=rep(list(NULL),length(df))
Min=rep(list(NULL),length(df))
Max=rep(list(NULL),length(df))
Variation=rep(list(NULL),length(df))
Volume=rep(list(NULL),length(df))
for(i in 1:length(df)){
Date[[i]]=df[[i]]$date
Value[[i]]=df[[i]]$value
Min[[i]]=df[[i]]$min
Max[[i]]=df[[i]]$max
Variation[[i]]=df[[i]]$variation
Volume[[i]]=df[[i]]$volume
}
Date=matrix(Date)
Value=matrix(Value)
Min=matrix(Min)
Max=matrix(Max)
Variation=matrix(Variation)
Volume=matrix(Volume)
df=data.frame(Date,Value,Min,Max,Variation,Volume)
View(df)
rownames(df)=df$Date
df=df[,-1]
df=na.omit(df)
View(df)
#' Title
#'
#' @param ticker put ticker
#' @param from from date
#' @param to to date
#' @return data frame
#' @export
from='06-12-2017'
to='01-01-2021'
ticker='CTM'
pd=reticulate::import("pandas")
requests=reticulate::import("requests")
json=reticulate::import("json")
datetime=reticulate::import("datetime")
sys=reticulate::import('sys')
warnings=reticulate::import("warnings")
codecs=reticulate::import("codecs")
dat=reticulate::dict ('ADH' = "MA0000011512", "AFM"= "MA0000012296", "AFI"= "MA0000012114","GAZ"= "MA0000010951",
"AGM"= "MA0000010944", "ADI"= "MA0000011819", "ALM"= "MA0000010936",
"ARD"= "MA0000012460", "ATL"= "MA0000011710", "ATW"= "MA0000012445", "ATH"= "MA0000010969",
"NEJ"= "MA0000011009", "BAL"= "MA0000011991", "BOA"= "MA0000012437",
"BCP"= "MA0000011884", "BCI"= "MA0000010811", "CRS"= "MA0000011868", "CDM"= "MA0000010381",
"CDA"= "MA0000012049", "CIH"= "MA0000011454", "CMA"= "MA0000010506",
"CMT"= "MA0000011793", "COL"= "MA0000011934", "CSR"= "MA0000012247", "CTM"= "MA0000010340",
"DRI"= "MA0000011421", "DLM"= "MA0000011777", "DHO"= "MA0000011850",
"DIS"= "MA0000010639", "DWY"= "MA0000011637", "NKL"= "MA0000011942", "EQD"= "MA0000010357",
"FBR"= "MA0000011587", "HPS"= "MA0000011611", "IBC"= "MA0000011132",
"IMO"= "MA0000012387", "INV"= "MA0000011579", "JET"= "MA0000012080",
"LBV"= "MA0000011801", "LHM"= "MA0000012320", "LES"= "MA0000012031", "LYD"= "MA0000011439",
"M2M"= "MA0000011678", "MOX"= "MA0000010985", "MAB"= "MA0000011215", "MNG"= "MA0000011058",
"MLE"= "MA0000010035", "IAM"= "MA0000011488", "MDP"= "MA0000011447",
"MIC"= "MA0000012163", "MUT"= "MA0000012395", "NEX"= "MA0000011140", "OUL"= "MA0000010415",
"PRO"= "MA0000011660", "REB"= "MA0000010993", "RDS"= "MA0000012239",
"RISMA"="MA0000011462","S2M"= "MA0000012106", "SAH"= "MA0000012007", "SLF"= "MA0000011744",
"SAM"="MA0000010803", "SMI"= "MA0000010068", "SNA"= "MA0000011843",
"SNP"="MA0000011728", "MSA"= "MA0000012312", "SID"= "MA0000010019", "SOT"= "MA0000012502",
"SRM"="MA0000011595", "SBM"= "MA0000010365", "STR"= "MA0000012056",
"TQM"= "MA0000012205", "TIM"= "MA0000011686", "TMA"= "MA0000012262", "UMR"= "MA0000012023",
"WAA"= "MA0000010928", "ZDJ"= "MA0000010571")
CodeValeur =reticulate::dict("ADH" = "9000" , "AFM" = "12200" , "AFI" = "11700" , "GAZ" = "7100" , "AGM" = "6700" ,
"ADI" = "11200" , "ALM" = "6600" , "ARD" = "27" , "ATL" = "10300" , "ATW" = "8200" , "ATH" = "3200" ,
"NEJ" = "7000" , "BAL" = "3300" , "BOA" = "1100" , "BCP" = "8000" , "BCI" = "5100" , "CRS" = "8900" ,
"CDM" = "3600" , "CDA" = "3900" , "CIH" = "3100" , "CMA" = "4000" , "CMT" = "11000" , "COL" = "9200" ,
"CSR" = "4100" , "CTM" = "2200" , "DRI" = "8500" , "DLM" = "10800" , "DHO" = "10900" , "DIS" = "4200" ,
"DWY" = "9700" , "NKL" = "11300" , "EQD" = "2300" , "FBR" = "9300" , "HPS" = "9600" , "IBC" = "7600" ,
"IMO" = "12" , "INV" = "9500" , "JET" = "11600" , "LBV" = "11100" , "LHM" = "3800" , "LES" = "4800" ,
"LYD" = "8600" , "M2M" = "10000" , "MOX" = "7200" , "MAB" = "1600" , "MNG" = "7300" , "MLE" = "2500" ,
"IAM" = "8001" , "MDP" = "6500" , "MIC" = "10600" , "MUT" = "21" , "NEX" = "7400" , "OUL" = "5200" ,
"PRO" = "9900" , "REB" = "5300" , "RDS" = "12000" , "RISMA" = "8700" , "S2M" = "11800" ,
"SAH" = "11400" , "SLF" = "10700" , "SAM" = "6800" , "SMI" = "1500" , "SNA" = "10500" ,
"SNP" = "9400" , "MSA" = "12300" , "SID" = "1300" , "SOT" = "9800" , "SRM" = "2000" ,
"SBM" = "10400" , "STR" = "11500" , "TQM" = "11900" , "TIM" = "10100" , "TMA" = "12100" , "UMR" = "7500" ,
"WAA" = "6400" , "ZDJ" = "5800")
isin=dat[ticker]
link=paste('https://www.leboursier.ma/api?method=getPriceHistory&ISIN=','&format=json&from=',sep = toString(isin))
link=paste(link,'&to=',sep = toString(from))
link=paste0(link,toString(to))
r=requests$get(link)
c=codecs$encode(r$text)
c=c$decode('UTF-8-SIG')
data=json$loads(c)
df0=pd$json_normalize(data)
df = pd$DataFrame(df0$result)
df=t(df)
Date=rep(list(NULL),length(df))
Value=rep(list(NULL),length(df))
Min=rep(list(NULL),length(df))
Max=rep(list(NULL),length(df))
Variation=rep(list(NULL),length(df))
Volume=rep(list(NULL),length(df))
for(i in 1:length(df)){
Date[[i]]=df[[i]]$date
Value[[i]]=df[[i]]$value
Min[[i]]=df[[i]]$min
Max[[i]]=df[[i]]$max
Variation[[i]]=df[[i]]$variation
Volume[[i]]=df[[i]]$volume
}
Date=matrix(Date)
Value=matrix(Value)
Min=matrix(Min)
Max=matrix(Max)
Variation=matrix(Variation)
Volume=matrix(Volume)
df=data.frame(Date,Value,Min,Max,Variation,Volume)
rownames(df)=df$Date
df=df[,-1]
library(casabourse)
ctm=daily.data('CTM','01-01-2015','01-01-2020')
View(ctm)
atw=daily.data('ATW','01-01-2015','01-01-2020')
View(atw)
tickers()
c.bourse::tickers()
t=tickers()
View(t)
adh=daily.data('ADH','01-01-2018','01-01-2021')
View(adh)
tail(adh)
market=today.market()
View(market)
pal=today.prizelist('up')
View(pal)
pal=today.prizelist('down')
madex.data()
nadex=madex.data()
nadex=casabourse::madex.data()
View(nadex)
?madex.data
?daily.data
?casabourse::daily.data
devtools::submit_cran()
c=c(1,2,3,4,5)
c
c[1]
c[1]=NULL
c=rep(NULL,10)
c
c=rep(list(NULL),10)
c
rep('null',10)
library(casabourse)
market=today.market()
View(market)
masi=masi.data()
View(masi)
reticulate::repl_python()
